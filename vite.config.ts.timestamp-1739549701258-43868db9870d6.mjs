// vite.config.ts
import path from "node:path";
import vue from "file:///home/icebound/code/apisix-dashboard-unofficial/node_modules/@vitejs/plugin-vue/dist/index.mjs";
import vueJsx from "file:///home/icebound/code/apisix-dashboard-unofficial/node_modules/@vitejs/plugin-vue-jsx/dist/index.mjs";
import { loadEnv } from "file:///home/icebound/code/apisix-dashboard-unofficial/node_modules/vite/dist/node/index.js";
import { viteMockServe } from "file:///home/icebound/code/apisix-dashboard-unofficial/node_modules/vite-plugin-mock/dist/index.mjs";
import svgLoader from "file:///home/icebound/code/apisix-dashboard-unofficial/node_modules/vite-svg-loader/index.js";
var __vite_injected_original_dirname = "/home/icebound/code/apisix-dashboard-unofficial";
var CWD = process.cwd();
var vite_config_default = ({ mode }) => {
  const {
    VITE_IS_REQUEST_PROXY,
    VITE_BASE_URL,
    VITE_APISIX_ADMIN_API_ENDPOINT,
    VITE_APISIX_ADMIN_API_PROXY_ENDPOINT,
    VITE_APISIX_CONTROL_API_ENDPOINT,
    VITE_APISIX_CONTROL_API_PROXY_ENDPOINT
  } = loadEnv(mode, CWD);
  return {
    base: VITE_BASE_URL,
    resolve: {
      alias: {
        "@": path.resolve(__vite_injected_original_dirname, "./src")
      }
    },
    css: {
      preprocessorOptions: {
        less: {
          modifyVars: {
            hack: `true; @import (reference) "${path.resolve("src/style/variables.less")}";`
          },
          math: "strict",
          javascriptEnabled: true
        }
      }
    },
    plugins: [
      vue(),
      vueJsx(),
      viteMockServe({
        mockPath: "mock",
        enable: true
      }),
      svgLoader({
        svgoConfig: {
          plugins: [
            {
              name: "preset-default",
              params: {
                overrides: {}
              }
            },
            {
              name: "prefixIds",
              params: {
                delim: "__",
                prefixIds: true,
                prefixClassNames: true
              }
            }
          ]
        }
      })
    ],
    server: {
      port: 3002,
      host: "0.0.0.0",
      // 项目是否启动请求代理
      proxy: (
        // tips: 如果VITE_IS_REQUEST_PROXY为true则采用该配置文件中的地址请求，会绕过vite.config.js中设置的代理
        // NOTE: 仔细看字👆，tdesign不知道为什么起这个变量名
        VITE_IS_REQUEST_PROXY !== "true" ? {
          // apisix admin
          [VITE_APISIX_ADMIN_API_PROXY_ENDPOINT]: {
            target: VITE_APISIX_ADMIN_API_ENDPOINT,
            rewrite: (path2) => path2.replace(new RegExp(`^${VITE_APISIX_ADMIN_API_PROXY_ENDPOINT}`), ""),
            secure: false
          },
          // apisix control
          [VITE_APISIX_CONTROL_API_PROXY_ENDPOINT]: {
            target: VITE_APISIX_CONTROL_API_ENDPOINT,
            rewrite: (path2) => path2.replace(new RegExp(`^${VITE_APISIX_CONTROL_API_PROXY_ENDPOINT}`), ""),
            secure: false
          }
        } : void 0
      )
    }
  };
};
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvaG9tZS9pY2Vib3VuZC9jb2RlL2FwaXNpeC1kYXNoYm9hcmQtdW5vZmZpY2lhbFwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL2hvbWUvaWNlYm91bmQvY29kZS9hcGlzaXgtZGFzaGJvYXJkLXVub2ZmaWNpYWwvdml0ZS5jb25maWcudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL2hvbWUvaWNlYm91bmQvY29kZS9hcGlzaXgtZGFzaGJvYXJkLXVub2ZmaWNpYWwvdml0ZS5jb25maWcudHNcIjtpbXBvcnQgcGF0aCBmcm9tICdub2RlOnBhdGgnO1xuXG5pbXBvcnQgdnVlIGZyb20gJ0B2aXRlanMvcGx1Z2luLXZ1ZSc7XG5pbXBvcnQgdnVlSnN4IGZyb20gJ0B2aXRlanMvcGx1Z2luLXZ1ZS1qc3gnO1xuaW1wb3J0IHsgQ29uZmlnRW52LCBsb2FkRW52LCBVc2VyQ29uZmlnIH0gZnJvbSAndml0ZSc7XG5pbXBvcnQgeyB2aXRlTW9ja1NlcnZlIH0gZnJvbSAndml0ZS1wbHVnaW4tbW9jayc7XG5pbXBvcnQgc3ZnTG9hZGVyIGZyb20gJ3ZpdGUtc3ZnLWxvYWRlcic7XG5cbmNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG5cbi8vIGh0dHBzOi8vdml0ZWpzLmRldi9jb25maWcvXG5leHBvcnQgZGVmYXVsdCAoeyBtb2RlIH06IENvbmZpZ0Vudik6IFVzZXJDb25maWcgPT4ge1xuICBjb25zdCB7XG4gICAgVklURV9JU19SRVFVRVNUX1BST1hZLFxuICAgIFZJVEVfQkFTRV9VUkwsXG4gICAgVklURV9BUElTSVhfQURNSU5fQVBJX0VORFBPSU5ULFxuICAgIFZJVEVfQVBJU0lYX0FETUlOX0FQSV9QUk9YWV9FTkRQT0lOVCxcbiAgICBWSVRFX0FQSVNJWF9DT05UUk9MX0FQSV9FTkRQT0lOVCxcbiAgICBWSVRFX0FQSVNJWF9DT05UUk9MX0FQSV9QUk9YWV9FTkRQT0lOVCxcbiAgfSA9IGxvYWRFbnYobW9kZSwgQ1dEKTtcbiAgcmV0dXJuIHtcbiAgICBiYXNlOiBWSVRFX0JBU0VfVVJMLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIGFsaWFzOiB7XG4gICAgICAgICdAJzogcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4vc3JjJyksXG4gICAgICB9LFxuICAgIH0sXG5cbiAgICBjc3M6IHtcbiAgICAgIHByZXByb2Nlc3Nvck9wdGlvbnM6IHtcbiAgICAgICAgbGVzczoge1xuICAgICAgICAgIG1vZGlmeVZhcnM6IHtcbiAgICAgICAgICAgIGhhY2s6IGB0cnVlOyBAaW1wb3J0IChyZWZlcmVuY2UpIFwiJHtwYXRoLnJlc29sdmUoJ3NyYy9zdHlsZS92YXJpYWJsZXMubGVzcycpfVwiO2AsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBtYXRoOiAnc3RyaWN0JyxcbiAgICAgICAgICBqYXZhc2NyaXB0RW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcblxuICAgIHBsdWdpbnM6IFtcbiAgICAgIHZ1ZSgpLFxuICAgICAgdnVlSnN4KCksXG4gICAgICB2aXRlTW9ja1NlcnZlKHtcbiAgICAgICAgbW9ja1BhdGg6ICdtb2NrJyxcbiAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgfSksXG4gICAgICBzdmdMb2FkZXIoe1xuICAgICAgICBzdmdvQ29uZmlnOiB7XG4gICAgICAgICAgcGx1Z2luczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBuYW1lOiAncHJlc2V0LWRlZmF1bHQnLFxuICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICBvdmVycmlkZXM6IHt9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogJ3ByZWZpeElkcycsXG4gICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIGRlbGltOiAnX18nLFxuICAgICAgICAgICAgICAgIHByZWZpeElkczogdHJ1ZSxcbiAgICAgICAgICAgICAgICBwcmVmaXhDbGFzc05hbWVzOiB0cnVlLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgXSxcblxuICAgIHNlcnZlcjoge1xuICAgICAgcG9ydDogMzAwMixcbiAgICAgIGhvc3Q6ICcwLjAuMC4wJyxcbiAgICAgIC8vIFx1OTg3OVx1NzZFRVx1NjYyRlx1NTQyNlx1NTQyRlx1NTJBOFx1OEJGN1x1NkM0Mlx1NEVFM1x1NzQwNlxuICAgICAgcHJveHk6XG4gICAgICAgIC8vIHRpcHM6IFx1NTk4Mlx1Njc5Q1ZJVEVfSVNfUkVRVUVTVF9QUk9YWVx1NEUzQXRydWVcdTUyMTlcdTkxQzdcdTc1MjhcdThCRTVcdTkxNERcdTdGNkVcdTY1ODdcdTRFRjZcdTRFMkRcdTc2ODRcdTU3MzBcdTU3NDBcdThCRjdcdTZDNDJcdUZGMENcdTRGMUFcdTdFRDVcdThGQzd2aXRlLmNvbmZpZy5qc1x1NEUyRFx1OEJCRVx1N0Y2RVx1NzY4NFx1NEVFM1x1NzQwNlxuICAgICAgICAvLyBOT1RFOiBcdTRFRDRcdTdFQzZcdTc3MEJcdTVCNTdcdUQ4M0RcdURDNDZcdUZGMEN0ZGVzaWduXHU0RTBEXHU3N0U1XHU5MDUzXHU0RTNBXHU0RUMwXHU0RTQ4XHU4RDc3XHU4RkQ5XHU0RTJBXHU1M0Q4XHU5MUNGXHU1NDBEXG4gICAgICAgIFZJVEVfSVNfUkVRVUVTVF9QUk9YWSAhPT0gJ3RydWUnXG4gICAgICAgICAgPyB7XG4gICAgICAgICAgICAgIC8vIGFwaXNpeCBhZG1pblxuICAgICAgICAgICAgICBbVklURV9BUElTSVhfQURNSU5fQVBJX1BST1hZX0VORFBPSU5UXToge1xuICAgICAgICAgICAgICAgIHRhcmdldDogVklURV9BUElTSVhfQURNSU5fQVBJX0VORFBPSU5ULFxuICAgICAgICAgICAgICAgIHJld3JpdGU6IChwYXRoKSA9PiBwYXRoLnJlcGxhY2UobmV3IFJlZ0V4cChgXiR7VklURV9BUElTSVhfQURNSU5fQVBJX1BST1hZX0VORFBPSU5UfWApLCAnJyksXG4gICAgICAgICAgICAgICAgc2VjdXJlOiBmYWxzZSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgLy8gYXBpc2l4IGNvbnRyb2xcbiAgICAgICAgICAgICAgW1ZJVEVfQVBJU0lYX0NPTlRST0xfQVBJX1BST1hZX0VORFBPSU5UXToge1xuICAgICAgICAgICAgICAgIHRhcmdldDogVklURV9BUElTSVhfQ09OVFJPTF9BUElfRU5EUE9JTlQsXG4gICAgICAgICAgICAgICAgcmV3cml0ZTogKHBhdGgpID0+IHBhdGgucmVwbGFjZShuZXcgUmVnRXhwKGBeJHtWSVRFX0FQSVNJWF9DT05UUk9MX0FQSV9QUk9YWV9FTkRQT0lOVH1gKSwgJycpLFxuICAgICAgICAgICAgICAgIHNlY3VyZTogZmFsc2UsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9XG4gICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgfSxcbiAgfTtcbn07XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQStULE9BQU8sVUFBVTtBQUVoVixPQUFPLFNBQVM7QUFDaEIsT0FBTyxZQUFZO0FBQ25CLFNBQW9CLGVBQTJCO0FBQy9DLFNBQVMscUJBQXFCO0FBQzlCLE9BQU8sZUFBZTtBQU50QixJQUFNLG1DQUFtQztBQVF6QyxJQUFNLE1BQU0sUUFBUSxJQUFJO0FBR3hCLElBQU8sc0JBQVEsQ0FBQyxFQUFFLEtBQUssTUFBNkI7QUFDbEQsUUFBTTtBQUFBLElBQ0o7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLEVBQ0YsSUFBSSxRQUFRLE1BQU0sR0FBRztBQUNyQixTQUFPO0FBQUEsSUFDTCxNQUFNO0FBQUEsSUFDTixTQUFTO0FBQUEsTUFDUCxPQUFPO0FBQUEsUUFDTCxLQUFLLEtBQUssUUFBUSxrQ0FBVyxPQUFPO0FBQUEsTUFDdEM7QUFBQSxJQUNGO0FBQUEsSUFFQSxLQUFLO0FBQUEsTUFDSCxxQkFBcUI7QUFBQSxRQUNuQixNQUFNO0FBQUEsVUFDSixZQUFZO0FBQUEsWUFDVixNQUFNLDhCQUE4QixLQUFLLFFBQVEsMEJBQTBCLENBQUM7QUFBQSxVQUM5RTtBQUFBLFVBQ0EsTUFBTTtBQUFBLFVBQ04sbUJBQW1CO0FBQUEsUUFDckI7QUFBQSxNQUNGO0FBQUEsSUFDRjtBQUFBLElBRUEsU0FBUztBQUFBLE1BQ1AsSUFBSTtBQUFBLE1BQ0osT0FBTztBQUFBLE1BQ1AsY0FBYztBQUFBLFFBQ1osVUFBVTtBQUFBLFFBQ1YsUUFBUTtBQUFBLE1BQ1YsQ0FBQztBQUFBLE1BQ0QsVUFBVTtBQUFBLFFBQ1IsWUFBWTtBQUFBLFVBQ1YsU0FBUztBQUFBLFlBQ1A7QUFBQSxjQUNFLE1BQU07QUFBQSxjQUNOLFFBQVE7QUFBQSxnQkFDTixXQUFXLENBQUM7QUFBQSxjQUNkO0FBQUEsWUFDRjtBQUFBLFlBQ0E7QUFBQSxjQUNFLE1BQU07QUFBQSxjQUNOLFFBQVE7QUFBQSxnQkFDTixPQUFPO0FBQUEsZ0JBQ1AsV0FBVztBQUFBLGdCQUNYLGtCQUFrQjtBQUFBLGNBQ3BCO0FBQUEsWUFDRjtBQUFBLFVBQ0Y7QUFBQSxRQUNGO0FBQUEsTUFDRixDQUFDO0FBQUEsSUFDSDtBQUFBLElBRUEsUUFBUTtBQUFBLE1BQ04sTUFBTTtBQUFBLE1BQ04sTUFBTTtBQUFBO0FBQUEsTUFFTjtBQUFBO0FBQUE7QUFBQSxRQUdFLDBCQUEwQixTQUN0QjtBQUFBO0FBQUEsVUFFRSxDQUFDLG9DQUFvQyxHQUFHO0FBQUEsWUFDdEMsUUFBUTtBQUFBLFlBQ1IsU0FBUyxDQUFDQSxVQUFTQSxNQUFLLFFBQVEsSUFBSSxPQUFPLElBQUksb0NBQW9DLEVBQUUsR0FBRyxFQUFFO0FBQUEsWUFDMUYsUUFBUTtBQUFBLFVBQ1Y7QUFBQTtBQUFBLFVBRUEsQ0FBQyxzQ0FBc0MsR0FBRztBQUFBLFlBQ3hDLFFBQVE7QUFBQSxZQUNSLFNBQVMsQ0FBQ0EsVUFBU0EsTUFBSyxRQUFRLElBQUksT0FBTyxJQUFJLHNDQUFzQyxFQUFFLEdBQUcsRUFBRTtBQUFBLFlBQzVGLFFBQVE7QUFBQSxVQUNWO0FBQUEsUUFDRixJQUNBO0FBQUE7QUFBQSxJQUNSO0FBQUEsRUFDRjtBQUNGOyIsCiAgIm5hbWVzIjogWyJwYXRoIl0KfQo=
